{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAKMC,GAHgBC,SAASC,cAAc,uBACxBD,SAASC,cAAc,sBAC1BD,SAASC,cAAc,wBAC1BD,SAASC,cAAc,0BAOtCF,EAAOG,iBAAiB,SAExB,SAAiBC,G,kBAIbC,YAAW,YAMf,SAAuBC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GACLC,KAAKC,SAAW,GAGpCH,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,KAMvBM,CAlBYC,EAAI,EAZD,IACC,IAW4BA,GAmBzCC,MAAK,SAAAC,G,IAAGC,EAAQD,EAARV,SAAUY,EAAKF,EAALT,MACjBT,EAAAqB,OAAOC,QAAQ,uBAAwCC,OAAfJ,EAAS,QAAYI,OAANH,EAAM,M,IAE9DI,OAAM,SAAAN,G,IAAGC,EAAQD,EAARV,SAAUY,EAAKF,EAALT,MAClBT,EAAAqB,OAAOI,QAAQ,sBAAuCF,OAAfJ,EAAS,QAAYI,OAANH,EAAM,M,MAnCjD,IACC,IAYcJ,E,EAL9BV,EAAEoB,iBAEF,IAAK,IAAIC,EAAI,EAAGA,EARL,EAQiBA,GAAK,EAACC,EAAAD,E","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst firstDelayRef = document.querySelector('input[name = delay]');\nconst delayStepRef = document.querySelector('input[name = step]');\nconst amountRef = document.querySelector('input[name = amount]');\nconst btnRef = document.querySelector('button[type = submit]');\n\nlet firstDelay = 2000;\nconst delayStep = 1000;\nlet amount = 6;\n// let value = 0;\n\nbtnRef.addEventListener('click', onStart);\n\nfunction onStart(e) {\n  e.preventDefault();\n\n  for (let i = 0; i < amount; i += 1) {\n    setTimeout(() => {\n      waitFor(i + 1, firstDelay + delayStep * i);\n    }, firstDelay + delayStep * i);\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    if (shouldResolve) {\n      resolve({ position, delay });\n    } else {\n      reject({ position, delay });\n    }\n  });\n}\n\nfunction waitFor(position, delay) {\n  createPromise(position, delay)\n    .then(({ position, delay }) => {\n      Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n}\n\n// createPromise(position, delay)\n//   .then(({ position, delay }) => {\n//     console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//   })\n//   .catch(({ position, delay }) => {\n//     console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n//   });\n\n// ----------------------------------------------------\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$btnRef","document","querySelector","addEventListener","e","setTimeout","position","delay","Promise","resolve","reject","Math","random","$ce04d3a99e08e73b$var$createPromise","i","then","param","_$position","_$delay","Notify","success","concat","catch","failure","preventDefault","i1","_loop"],"version":3,"file":"03-promises.f47a8f6a.js.map"}