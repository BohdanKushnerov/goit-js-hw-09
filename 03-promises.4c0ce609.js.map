{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAUC,SAASC,cAAc,SACjCC,EAAgBF,SAASC,cAAc,uBACvCE,EAAeH,SAASC,cAAc,sBACtCG,EAAYJ,SAASC,cAAc,wBAGzCF,EAAQM,iBAAiB,UAEzB,SAAiBC,G,kBAQb,IAAMC,EAAOC,EAAI,EACXC,EAAeC,EAAaC,EAAYH,EAE9CI,YAAW,YAMf,SAAuBC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GACLC,KAAKC,SAAW,GAGpCH,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,KAMvBM,CAlBeb,EAAME,GAmBlBY,MAAK,SAAAC,G,IAAGC,EAAQD,EAART,SAAUW,EAAKF,EAALR,MACjBjB,EAAA4B,OAAOC,QAAQ,uBAAwCC,OAAfJ,EAAS,QAAYI,OAANH,EAAM,M,IAE9DI,OAAM,SAAAN,G,IAAGC,EAAQD,EAART,SAAUW,EAAKF,EAALR,MAClBjB,EAAA4B,OAAOI,QAAQ,sBAAqCF,OAAfJ,EAAS,QAAYI,OAANH,EAAM,M,MAtBzDf,E,EAZLH,EAAEwB,iBAMF,IAJA,IAAMpB,EAAaqB,OAAO7B,EAAc8B,OAClCrB,EAAYoB,OAAO5B,EAAa6B,OAChCC,EAASF,OAAO3B,EAAU4B,OAEvBE,EAAI,EAAGA,EAAID,EAAQC,GAAK,EAACC,EAAAD,E","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formRef = document.querySelector('.form');\nconst firstDelayRef = document.querySelector('input[name = delay]');\nconst delayStepRef = document.querySelector('input[name = step]');\nconst amountRef = document.querySelector('input[name = amount]');\n// const btnRef = document.querySelector('button[type = submit]');\n\nformRef.addEventListener('submit', onStart);\n\nfunction onStart(e) {\n  e.preventDefault();\n\n  const firstDelay = Number(firstDelayRef.value);\n  const delayStep = Number(delayStepRef.value);\n  const amount = Number(amountRef.value);\n\n  for (let i = 0; i < amount; i += 1) {\n    const step = i + 1;\n    const currentDelay = firstDelay + delayStep * i\n\n    setTimeout(() => {\n      waitForRun(step, currentDelay);\n    }, currentDelay);\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    if (shouldResolve) {\n      resolve({ position, delay });\n    } else {\n      reject({ position, delay });\n    }\n  });\n}\n\nfunction waitForRun(position, delay) {\n  createPromise(position, delay)\n    .then(({ position, delay }) => {\n      Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$formRef","document","querySelector","$ce04d3a99e08e73b$var$firstDelayRef","$ce04d3a99e08e73b$var$delayStepRef","$ce04d3a99e08e73b$var$amountRef","addEventListener","e","step","i","currentDelay","firstDelay","delayStep","setTimeout","position","delay","Promise","resolve","reject","Math","random","$ce04d3a99e08e73b$var$createPromise","then","param","_$position","_$delay","Notify","success","concat","catch","failure","preventDefault","Number","value","amount","i1","_loop"],"version":3,"file":"03-promises.4c0ce609.js.map"}