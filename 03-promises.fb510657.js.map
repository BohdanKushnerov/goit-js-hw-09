{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAUC,SAASC,cAAc,SACjCC,EAAgBF,SAASC,cAAc,uBACvCE,EAAeH,SAASC,cAAc,sBACtCG,EAAYJ,SAASC,cAAc,wBAGzCF,EAAQM,iBAAiB,UAEzB,SAAiBC,GACfA,EAAEC,iBAEF,MAAMC,EAAaC,OAAOP,EAAcQ,OAClCC,EAAYF,OAAON,EAAaO,OAChCE,EAASH,OAAOL,EAAUM,OAEhC,IAAK,IAAIG,EAAI,EAAGA,EAAID,EAAQC,GAAK,EAAG,CAClC,MAAMC,EAAOD,EAAI,EACXE,EAAeP,EAAaG,EAAYE,EAE9CG,YAAW,KAMf,IAAuBC,EAAUC,GAAVD,EALNH,EAKgBI,EALVH,EAMd,IAAII,SAAQ,CAACC,EAASC,KACLC,KAAKC,SAAW,GAGpCH,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,KAO5BM,MAAK,EAACP,SAAEA,EAAQC,MAAEA,MACjBrB,EAAA4B,OAAOC,QAAQ,uBAAqBT,QAAiBC,MAAU,IAEhES,OAAM,EAACV,SAAEA,EAAQC,MAAEA,MAClBrB,EAAA4B,OAAOG,QAAQ,sBAAoBX,QAAeC,MAAU,GAvB9B,GAC7BH,E","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formRef = document.querySelector('.form');\nconst firstDelayRef = document.querySelector('input[name = delay]');\nconst delayStepRef = document.querySelector('input[name = step]');\nconst amountRef = document.querySelector('input[name = amount]');\n// const btnRef = document.querySelector('button[type = submit]');\n\nformRef.addEventListener('submit', onStart);\n\nfunction onStart(e) {\n  e.preventDefault();\n\n  const firstDelay = Number(firstDelayRef.value);\n  const delayStep = Number(delayStepRef.value);\n  const amount = Number(amountRef.value);\n\n  for (let i = 0; i < amount; i += 1) {\n    const step = i + 1;\n    const currentDelay = firstDelay + delayStep * i\n\n    setTimeout(() => {\n      waitForRun(step, currentDelay);\n    }, currentDelay);\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    if (shouldResolve) {\n      resolve({ position, delay });\n    } else {\n      reject({ position, delay });\n    }\n  });\n}\n\nfunction waitForRun(position, delay) {\n  createPromise(position, delay)\n    .then(({ position, delay }) => {\n      Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$formRef","document","querySelector","$47d4ff9957288465$var$firstDelayRef","$47d4ff9957288465$var$delayStepRef","$47d4ff9957288465$var$amountRef","addEventListener","e","preventDefault","firstDelay","Number","value","delayStep","amount","i","step","currentDelay","setTimeout","position","delay","Promise","resolve","reject","Math","random","then","Notify","success","catch","failure"],"version":3,"file":"03-promises.fb510657.js.map"}